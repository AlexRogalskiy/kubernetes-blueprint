# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Blueprint for deploying a Kubernetes cluster through Mist.io
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

tosca_definitions_version: cloudify_dsl_1_2

# # # # # # # # # # # # # # i# # # # # # # # # # # # # # # #
# Imports section
# Importing the Mist.io-Cloudify Plugin
# # # # # # # # # # # # # # i# # # # # # # # # # # # # # # #

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3m5/types.yaml
  - http://raw.githubusercontent.com/mistio/cloudify-mist-plugin/master/plugin.yaml

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Inputs section
# To specify deployment inputs run:
#   cfy deployments create -b <blueprint_id> -d <deployment_id> -i inputs.json
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

inputs:
  mist_uri:
    description: The Mist.io URI
    type: string
    default: 'https://mist.io'
  mist_username:
    description: Username of the Mist.io user
    type: string
    default: ''
  mist_password:
    description: Password of the Mist.io user
    type: string
    default: ''
  mist_token:
    description: Mist.io API Token
    type: string
    default: ''
  mist_cloud_1:
    description: The Mist.io ID of the cloud where resources should be provisioned
    type: string
    default: ''
  mist_image_1:
    description: The ID of the image to be used for the VMs' creation
    type: string
    default: ''
  mist_size_1:
    description: The ID of the desired size of the VMs
    type: string
    default: ''
  mist_location_1:
    description: The ID of a machine's location (based on the cloud provider)
    type: string
    default: ''
  mist_key_master:
    description: The Mist.io key ID for the Kubernetes master
    type: string
    default: ''
  mist_key_worker:
    description: The Mist.io key ID for the Kubernetes worker
    type: string
    default: ''
  ssh_user:
    description: The SSH user
    type: string
    default: ''
#  coreos:
#    description: True, if the image is CoreOS
#    type: boolean
#    default: false
  monitoring:
    description: True, if monitoring should be enabled for the machine
    type: boolean
    default: false
  master_name:
    description: The machine name of the Kubernetes master
    type: string
    default: ''
  worker_name:
    description: The machine name of the Kubernetes worker
    type: string
    default: ''
  networks:
    description: A list of network IDs that will be used by the machine
    default: []
  associate_floating_ip:
    description: True, in order to associate a floating IP to an Openstack instance
    type: boolean
    default: true
  auth_user:  # TODO can be a separate data type
    description: The username used for accessing the Kubernetes dashboard
    type: string
    default: 'admin'
  auth_pass:
    description: The password used for accessing the Kubernetes dashboard
    type: string
    default: ''

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Declaration of Kubernetes node_types
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

node_types:
  cloudify.mist.nodes.KubernetesMaster:
    derived_from: cloudify.mist.nodes.Server
    properties:
      use_external_resource:
        description: >
          Indicates whether the resource exists or if Cloudify should create the resource
        type: boolean
        default: false
      resource_id:
        description: >
          Either the name or ID of the resource in Cloudify. If this is an existing
          resource, you should provide the name or the ID of the resource in Mist.io
        type: string
        default: ''
      configured:
        description: Indicates whether Kubernetes is already configured
        type: boolean
        default: false
#      coreos:
#        description: Indicates whether Kubernetes is based on a CoreOS image
#        type: boolean
#        default: { get_input: coreos }
      master:
        description: Indicates the Kubernetes Master node
        type: boolean
        default: true
      parameters:
        description: >
          The key value pair parameters required by the Mist Client to use
          the mist.client.backend.create_machine command (backend_id, image_id
          size_id, location_id, name, monitoring, ssh_user, networks )
        type: cloudify.datatypes.mist.MachineParams
      mist_config:
        description: >
          A dictionary of values to pass to authenticate with the Mist API
        type: cloudify.datatypes.mist.Config
      auth_user:
        description: The username used for accessing the Kubernetes dashboard
        default: 'admin'
      auth_pass:
        description: The password used for accessing the Kubernetes dashboard
        default: ''
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: tasks/install_kubernetes.py
          inputs:
            start_retry_interval:
              description: Polling interval until the server is active (in seconds)
              type: integer
              default: 30
        associate: tasks/associate_nodes.py

  cloudify.mist.nodes.KubernetesWorker:
    derived_from: cloudify.mist.nodes.Server
    properties:
      use_external_resource:
        description: >
          Indicates whether the resource exists or if Cloudify should create the resource
        type: boolean
        default: false
      configured:
        description: Indicates whether Kubernetes is already configured
        type: boolean
        default: false
      resource_id:
        description: >
          Either the name or ID of the resource in Cloudify. If this is an existing
          resource, you should provide the name or the ID of the resource in Mist.io
        type: string
        default: ''
      parameters:
        description: >
          The key value pair parameters required by the Mist Client to use
          the mist.client.backend.create_machine command (backend_id, image_id
          size_id, location_id, name, monitoring, ssh_user, networks )
        default: {}
#      coreos:
#        description: Indicates whether Kubernetes is based on a CoreOS image
#        type: boolean
#        default: { get_input: coreos }
      master:
        description: Indicates the Kubernetes Master node
        type: boolean
        default: false
      mist_config:
        description: >
          A dictionary of values to pass to authenticate with the Mist API
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: tasks/install_kubernetes.py
          inputs:
            start_retry_interval:
              description: Polling interval until the server is active (in seconds)
              type: integer
              default: 30

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Kubernetes node_templates
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

node_templates:
  kube_master:
    type: cloudify.mist.nodes.KubernetesMaster
    properties:
      cloudify_agent:
        user: { get_input: ssh_user }
        key: ''
      use_external_resource: false
      resource_id: ''
      configured: false
#      coreos: { get_input: coreos }
      parameters:
        key: { get_input: mist_key_master }
        cloud_id: { get_input: mist_cloud_1 }
        image_id: { get_input: mist_image_1 }
        size_id: { get_input: mist_size_1 }
        location_id: { get_input: mist_location_1 }
        name: { get_input: master_name }
        monitoring: { get_input: monitoring }
        networks: { get_input: networks }
        associate_floating_ip: { get_input: associate_floating_ip }
      mist_config:
        mist_token: { get_input: mist_token }
        mist_username: { get_input: mist_username }
        mist_password: { get_input: mist_password }
        mist_uri: { get_input: mist_uri }
      auth_user: { get_input: auth_user }
      auth_pass: { get_input: auth_pass }

  kube_worker:
    type: cloudify.mist.nodes.KubernetesWorker
    properties:
      cloudify_agent:
        user: { get_input: ssh_user }
        key: ''
      use_external_resource: false
      resource_id: ''
      configured: false
#      coreos: { get_input: coreos }
      parameters:
        key: { get_input: mist_key_worker }
        cloud_id: { get_input: mist_cloud_1 }
        image_id: { get_input: mist_image_1 }
        size_id: { get_input: mist_size_1 }
        location_id: { get_input: mist_location_1 }
        name: { get_input: worker_name }
        monitoring: { get_input: monitoring }
        networks: { get_input: networks }
        associate_floating_ip: { get_input: associate_floating_ip }
      mist_config:
        mist_token: { get_input: mist_token }
        mist_username: { get_input: mist_username }
        mist_password: { get_input: mist_password }
        mist_uri: { get_input: mist_uri }
    relationships:
      - target: kube_master
        type: cloudify.relationships.connected_to

  master_key:
    type: cloudify.mist.nodes.KeyPair
    properties:
      use_external_resource: false
      resource_id: { get_input: mist_key_master }
      private_key_path: ''
      mist_config:
        mist_token: { get_input: mist_token }
        mist_username: { get_input: mist_username }
        mist_password: { get_input: mist_password }
        mist_uri: { get_input: mist_uri }

  worker_key:
    type: cloudify.mist.nodes.KeyPair
    properties:
      use_external_resource: false
      resource_id: { get_input: mist_key_worker }
      private_key_path: ''
      mist_config:
        mist_token: { get_input: mist_token }
        mist_username: { get_input: mist_username }
        mist_password: { get_input: mist_password }
        mist_uri: { get_input: mist_uri }

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Declaration of workflows for scaling the Kubernetes cluster
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

workflows:
  scale_cluster:
    mapping: workflows/scale_kubernetes.py
    parameters:
      use_external_resource:
        type: boolean
        default: false
      external_resource_id:
        type: string
        default: ''
      mist_key:
        description: Key ID (mandatory)
        type: string
        default: ''
      mist_cloud:
        description: Cloud ID (mandatory)
        type: string
        default: ''
      mist_image:
        description: Image ID (mandatory)
        type: string
        default: ''
      mist_size:
        description: Size ID (mandatory)
        type: string
        default: ''
      mist_location:
        description: Location ID (mandatory)
        type: string
        default: ''
      worker_name:
        description: >
          The name of the worker instance to be added/removed to/from the 
          Kubernetes cluster (mandatory)
        type: string
        default: ''
      master_token:
        description: >
          Token used in order to secure communication between Master and
          Worker nodes
          type: string
          default: { get_attribute: [ kube_master, master_token ] }
      monitoring:
        description: Whether to enable monitoring on the machine or not
        type: boolean
        default: false
      networks:
        description: The network IDs that will be used by the machine
        default: []
#      coreos:
#        description: Whether the machine's image is CoreOS
#        type: boolean
#        default: true
      delta:
        description: >
          Denotes how many worker nodes should be added/removed to/from the
          kubernetes cluster. A positive number denotes increase of instances,
          while a negative one denotes decrease of instances
        type: integer
        default: 0

# TODO: relationship to connect worker to master

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Outputs expose the application's endpoints
# You can access them by running:
#   cfy deployments -d <deployment_id> outputs
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

outputs:
  master:
    description: Kubernetes master node's IP address
    value:
      ip: { get_attribute: [ kube_master, ip ] }
  kubectl:
    description: Kubernetes shell command to verify the nodes' deployment
    value:
      command: { concat: [ 'kubectl --insecure-skip-tls-verify
                           --server="https://', { get_attribute: [ kube_master, ip ] },
                           '" --username="', { get_attribute: [ kube_master, auth_user ] },
                           '" --password="', { get_attribute: [ kube_master, auth_pass ] },
                           '" cluster-info' ] }
  dashboard:
    description: Kubernetes dashboard URL
    value:
      url: { concat: [ 'https://', { get_attribute: [ kube_master, ip ] },
                       '/api/v1/proxy/namespaces/kube-system/services/kubernetes-dashboard' ] }
      username: { get_attribute: [ kube_master, auth_user ] }
      password: { get_attribute: [ kube_master, auth_pass ] }
