# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                                                             #
#        Blueprint for deploying a Kubernetes cluster through Mist.io         #
#                                                                             #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #


tosca_definitions_version: cloudify_dsl_1_2


# Imports section. Imports the cloudify-mist-plugin.

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3m5/types.yaml
  - http://raw.githubusercontent.com/mistio/cloudify-mist-plugin/master/plugin.yaml


# Inputs section.

inputs:
  mist_uri:
    description: >
      The Mist.io URL. Points to the Mist.io service that will handle the
      workflows' execution. This input is provided by the application itself,
      so no user interaction is necessary. Defaults to the Mist.io SaaS.
    type: string
    default: 'https://mist.io'
  mist_token:
    description: >
      An API Token generated by Mist.io in order to be used with every request
      to authenticate to the Mist.io API. This input is also auto-generated by
      Mist.io.
    type: string
  mist_machine_master:
    description: >
      The spec of the machine to be used as the kubernetes master node. This
      input has to comply with: `cloudify.datatypes.mist.MachineParams`. To
      use an existing machine, the `cloud_id` and `machine_id` params should
      should only be provided. The `machine_id` key indicates the use of an
      existing resource. If the `machine_id` is left blank, then the rest of
      the inputs have to be provided according to each cloud provider's spec
      and required parameters. Note that `cloud_id` is always required.
  mist_machine_worker:
    description: >
      The spec of the machine to be used as a kubernetes node. The input has
      to also comply with `cloudify.datatypes.mist.MachineParams`. The same
      rules as in case of `mist_machine_master`, apply here, too.
  auth_user:
    description: >
      The username used for connecting to the kubernetes cluster and accessing
      its dashboard. Defaults to 'admin'.
    type: string
    default: 'admin'
  auth_pass:
    description: >
      The password used for connecting to the kubernetes cluster and accessing
      its dashboard. If left blank, it will be auto-generated.
    type: string
    default: ''


# DSL definitions section.

dsl_definitions:
  mist_config: &mist_config
    mist_uri: { get_input: mist_uri }
    mist_token: { get_input: mist_token }


# Kubernetes node types' section.

node_types:
  cloudify.mist.nodes.KubernetesMaster:
    derived_from: cloudify.mist.nodes.Server
    properties:
      master:
        description: Indicates the kubernetes master
        type: boolean
        default: true
      configured:
        description: Indicates whether kubernetes is already configured
        type: boolean
        default: false
      auth_user:
        description: The username used for accessing the kubernetes cluster
        type: string
        default: 'admin'
      auth_pass:
        description: The password used for accessing the kubernetes cluster
        type: string
        default: ''
    interfaces:
      cloudify.interfaces.lifecycle:
        stop: tasks/stop.py
        create: tasks/create.py
        configure: tasks/configure.py

  cloudify.mist.nodes.KubernetesWorker:
    derived_from: cloudify.mist.nodes.Server
    properties:
      master:
        type: boolean
        default: false
      configured:
        type: boolean
        default: false
    interfaces:
      cloudify.interfaces.lifecycle:
        stop: tasks/stop.py
        clone: tasks/clone.py
        create: tasks/create.py
        configure: tasks/configure.py


# Kubernetes node templates' section.

node_templates:
  kube_master:
    type: cloudify.mist.nodes.KubernetesMaster
    properties:
      mist_config: *mist_config
      parameters: { get_input: mist_machine_master }
      auth_user: { get_input: auth_user }
      auth_pass: { get_input: auth_pass }

  kube_worker:
    type: cloudify.mist.nodes.KubernetesWorker
    properties:
      mist_config: *mist_config
      parameters: { get_input: mist_machine_worker }
    relationships:
      - target: kube_master
        type: cloudify.relationships.connected_to


# Custom workflows sections. Use these to scale the cluster up/down.

workflows:
  scale_cluster_up:
    mapping: workflows/scale_up.py
    parameters:
      mist_machine_worker_list:
        default: []
        description: >
          A list of `mist_machine_worker` inputs, as also defined in the
          inputs section, used to increase the cluster's size by more than
          a single node at once. The size of the list equals the scaling
          factor.

  scale_cluster_down:
    mapping: workflows/scale_down.py
    parameters:
      delta:
        type: integer
        default: 0
        description: The number of worker nodes to be removed from the cluster


# Outputs section. Run "cfy local outputs" to get useful commands for
# connecting to the cluster and accessing its dashboard.

outputs:
  configure_kubectl_context_cluster:
    description: Configure cluster in kubectl
    value:
      command: { concat: [ 'kubectl config set-cluster ',
                           'mycontext-cluster',
                           ' --insecure-skip-tls-verify=true',
                           ' --server="https://', { get_attribute: [ kube_master, server_ip ] }, '"']}
  configure_kubectl_context_credentials:
    description: Configure cluster credentials using password authentication
    value:
      command: { concat: [ 'kubectl config set-credentials mycontext-admin',
                            ' --username="', { get_attribute: [ kube_master, auth_user ] }, '"',
                            ' --password="', { get_attribute: [ kube_master, auth_pass ] }, '"']}
  configure_kubectl_context_set:
    description: Configure kubectl context for cluster using previously configured credentials
    value:
      command: { concat: ['kubectl config set-context mycontext --cluster=mycontext-cluster --user=mycontext-admin']}
  kubectl_use_context:
    description: Switch to the configured context for this cluster
    value:
      command: { concat: ['kubectl config use-context mycontext'] }
  show_cluster_info:
    description: Kubernetes cluster-info command
    value:
      command: { concat: [ 'kubectl cluster-info' ] }
  start_dashboard_proxy:
    description: Kubernetes dashboard URL
    value:
      command: { concat: [ 'kubectl proxy' ] }
      url: http://localhost:8001/ui
